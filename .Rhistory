library(quantmod)
library(lubridate)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = as.data.frame(index(amzn))
Q5.1<-as.data.frame(sampleTimes[year(sampleTimes$`index(amzn)`)==2012,])
View(Q5.1)
colnames(Q5.1)<-"Datum"
Q5.2<-as.data.frame(Q5.1[weekdays(Q5.1$Datum)="2012"Monday,])
Q5.2<-as.data.frame(Q5.1[weekdays(Q5.1$Datum)=="Monday",])
Q5.2<-as.data.frame(Q5.1[weekdays(Q5.1$Datum)=="Maandag",])
Q5.2<-as.data.frame(Q5.1[weekdays(Q5.1$Datum)="Maandag",])
weekdays(.leap.seconds)
Q5.2<-as.data.frame(Q5.1[weekdays(Q5.1$Datum)=="maandag",])
c(nrow(Q5.1),nrow(Q5.2))
q()
library(swirl)
swirl()
swirl()
10/sqrt(100)
swirl()
swirl()
swirl()
pt(2.5,15,lower.tail = FALSE)
qnorm(0.95)
qnorm(0.99)
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
(32-30)/(10/sqrt(100))
quit()
setwd("~/Coursera/Data Science/5 Reproducible Research/Code/RepData_PeerAssessment1")
?unzip
unzip(zipfile = "activity.zip")
activity<-unzip(zipfile = "activity.zip")
activity<-read.csv(unzip(zipfile = "activity.zip"), na.strings = "NA")
library(dplyr)
activity<-zipfile = "activity.zip"%>%
unzip()%>%
read.csv(na.strings = "NA")
library(dplyr)
activity<-{zipfile = "activity.zip"%>%
unzip()%>%
read.csv(na.strings = "NA")}
library(dplyr)
activity<-{zipfile = "activity.zip"%>%
unzip()%>%
read.csv(na.strings = "NA")}
library(dplyr)
activity<-{"activity.zip"%>%
unzip()%>%
read.csv(na.strings = "NA")}
library(dplyr)
activity<-"activity.zip"%>%
unzip()%>%
read.csv(na.strings = "NA")
library(dplyr)
activity<-"activity.zip"%>%
unzip()%>%
read.csv(na.strings = "NA")
head(ADS)
library(dplyr)
ADS<-"activity.zip"%>%
unzip()%>%
read.csv(na.strings = "NA")
head(ADS)
head(ADS)
str(ADS)
View(ADS)
```{r, echo=FALSE}
ADS_DAY<-ADS%>%
group_by(date)%>%
summarise(mean(steps))
View(ADS_DAY)
ADS_DAY<-ADS%>%
group_by(date)%>%
summarise(Avg_Steps=mean(steps))
View(ADS_DAY)
---
title: "Reproducible Research: Peer Assessment 1"
author: "Berten Van Herp"
date: "June 13, 2015"
output:
html_document:
keep_md: yes
theme: journal
---
### Loading necessary packages
Firstly we are going to install the packages we need for this analysis.
```{r, results='hide'}
library(dplyr)
```
### Loading and preprocessing the data
We are going to load in the data in. ADS stands for Activity DataSet
```{r}
ADS<-"activity.zip"%>%
unzip()%>%
read.csv(na.strings = "NA")
```
Next we need to take a look at the data and the structure of the data
```{r}
head(ADS)
str(ADS)
```
There are a lot of NA's in this data-set, so we must be carefull when analysing.
### What is mean total number of steps taken per day?
Important note in the assignment: _For this part of the assignment, you can ignore the missing values in the dataset._
#### Calculate the total number of steps taken per day
```{r}
ADS_DAY<-ADS%>%
group_by(date)%>%
summarise(Avg_Steps=mean(steps))
```
Lets look at the table:
```{r}
head(ADS_DAY)
```
This looks OK.
#### Make a histogram of the total number of steps taken each day
#### Calculate and report the mean and median of the total number of steps taken per day
### What is the average daily activity pattern?
### Imputing missing values
### Are there differences in activity patterns between weekdays and weekends?
head(ADS_DAY)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
p<-(ggplot(aes(x=date,y=Avg_Steps))
+geom_histogram()
)
print(p)
?ggplot
p<-(ggplot(ADS_DAY,aes(x=date,y=Avg_Steps))
+geom_histogram()
)
print(p)
p<-(ggplot(ADS_DAY,aes(x=Avg_Steps))
+geom_histogram()
)
print(p)
ADS_DAY<-ADS%>%
group_by(date)%>%
summarise(Avg_Steps=sum(steps))
head(ADS_DAY)
p<-(ggplot(ADS_DAY,aes(x=Avg_Steps))
+geom_histogram()
)
print(p)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
summarise(ADS_DAY,mean(Sum_Steps))
summarise(ADS_DAY,mean(Sum_Steps))
summarise(ADS_DAY,median(Sum_Steps))
ADS_INT<-ADS%>%
group_by(interval)%>%
summarise(Avg_Steps=mean(steps))
View(ADS_INT)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ADS_DAY<-ADS%>%
group_by(date)%>%
summarise(Sum_Steps=sum(steps), na.rm=TRUE)
View(ADS_DAY)
ADS_DAY<-ADS%>%
group_by(date)%>%
summarise(Sum_Steps=sum(steps), na.omit=TRUE)
ADS_DAY<-ADS%>%
group_by(date)%>%
summarise(Sum_Steps=sum(steps, na.omit=TRUE))
ADS_DAY<-ADS%>%
group_by(date)%>%
summarise(Sum_Steps=sum(steps, na.rm =TRUE))
source('~/.active-rstudio-document', echo=TRUE)
ADS_INT<-ADS%>%
group_by(interval)%>%
summarise(Avg_Steps=mean(steps, na.rm=TRUE))
as.date(ADS$interval)
library(lubridate)
as.date(ADS$interval)
as.Date(ADS$interval)
?"lubridate"
hm(ADS$interval)
?lubridate
?hm
View(ADS)
ymd_hm(paste0(ADS$date," ",ADS$interval))
head(ymd_hm(paste0(ADS$date," ",ADS$interval)))
head(ymd(ADS$date))
ADS$date<-ymd(ADS$date))
ADS$date<-ymd(ADS$date)
hm(ADS$interval)
ADS$date<-ymd(ADS$date)
format( seq.POSIXt(as.POSIXct(Sys.Date()), as.POSIXct(Sys.Date()+1), by = "5 min"),
"%H%M", tz="GMT")
ADS$date<-ymd(ADS$date)
format( seq.POSIXt(as.POSIXct(Sys.Date()), as.POSIXct(Sys.Date()+1), by = "5 min"),"%H%M", tz="GMT")
seq.POSIXt()
?seq.POSIXt
ADS$date<-ymd(ADS$date)
format( seq.POSIXt(as.POSIXct(Sys.Date()), by = "5 min"),"%H%M", tz="GMT")
ADS$date<-ymd(ADS$date)
format( seq.POSIXt(as.POSIXct(Sys.Date()), by = "5 min", length.out = 280),"%H%M", tz="GMT")
ADS$date<-ymd(ADS$date)
format( seq.POSIXt(as.POSIXct(Sys.Date()), by = "5 min", length.out = 288),"%H%M", tz="GMT")
ADS$date<-ymd(ADS$date)
ADS$interval<-format( seq.POSIXt(as.POSIXct(Sys.Date()), by = "5 min", length.out = 288),"%H%M", tz="GMT")
source('~/.active-rstudio-document', echo=TRUE)
p<-ggplot(ADS_INT,aes(x=interval, y=Avg_Steps), type="l")
print(p)
p<-(ggplot(ADS_INT,aes(x=interval, y=Avg_Steps))
+ geom_line()
)
print(p)
p<-(ggplot(ADS_INT,aes(y=Avg_Steps))
+ geom_line()
)
print(p)
p<-(ggplot(ADS_INT)
+ geom_line(aes(y=Avg_Steps))
)
print(p)
p<-(ggplot(ADS_INT)
+ geom_line(aes(x=interval, y=Avg_Steps))
)
print(p)
p<-(ggplot(ADS_INT)
+ geom_line(aes(x=interval, y=Avg_Steps))
+ theme_minimal()
)
print(p)
p<-(ggplot(ADS_INT,aes(x=interval, y=Avg_Steps))
+ geom_line()
+ theme_minimal()
)
print(p)
source('~/.active-rstudio-document', echo=TRUE)
p<-(ggplot(ADS_INT,aes(y=Avg_Steps))
+ geom_line()
+ theme_minimal()
)
print(p)
p<-(ggplot(ADS_INT,aes(x=interval, y=Avg_Steps))
+ geom_line()
+ theme_minimal()
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps))
+ geom_line()
+ theme_minimal()
)
print(p)
no
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps))
+ geom_line()
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps))
+ geom_line()
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps))
+ geom_line()
+ scale_x_datetime()
)
print(p)
ADS$date<-ymd(ADS$date)
ADS$interval<-as.POSIXCT(format(seq.POSIXt(as.POSIXct(Sys.Date()), by = "5 min", length.out = 288),"%H%M", tz="GMT"))
ADS$interval<-as.POSIXct(format(seq.POSIXt(as.POSIXct(Sys.Date()), by = "5 min", length.out = 288),"%H%M", tz="GMT"))
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps))
+ geom_line()
+ scale_x_time()
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps))
+ geom_line()
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps))
+ geom_line(group=interval)
)
print(p)
str(ADS_INT)
p<-(ggplot(ADS_INT,aes(as.numeric(interval), Avg_Steps))
+ geom_line()
)
print(p)
p<-(ggplot(ADS_INT,aes(as.Date.POSIXct(interval), Avg_Steps))
+ geom_line()
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps))
+ geom_line(group=1)
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps,group=1))
+ geom_line()
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps,group=1))
+ geom_line()
+ theme_minimal()
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps,group=1))
+ geom_line()
+ theme_classic()
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps,group=1))
+ geom_line()
+ theme_classic()
+ scale_x_discrete(breaks=c("0000","0100","0200"))
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps,group=1))
+ geom_line()
+ theme_classic()
+ scale_x_discrete(breaks=c("00","01","02"))
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps,group=1))
+ geom_line()
+ theme_classic()
+ scale_x_discrete(breaks=c("0000","0400","0800","1200","1600","200"))
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps,group=1))
+ geom_line()
+ theme_classic()
+ scale_x_discrete(breaks=c("0000","0400","0800","1200","1600","2000"))
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps,group=1))
+ geom_line()
+ theme_classic()
+ scale_x_discrete(breaks=c("0000","0400","0800","1200","1600","2000","0000"))
)
print(p)
p<-(ggplot(ADS_INT,aes(interval, Avg_Steps,group=1))
+ geom_line()
+ theme_classic()
+ scale_x_discrete(breaks=c("0000","0400","0800","1200","1600","2000","2355"))
)
print(p)
ADS_INT%>%arrange(desc(Avg_Steps))%>%head(1)
